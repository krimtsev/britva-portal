<?php

namespace App\Http\Services;

use Illuminate\Support\Facades\Http;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Str;
use Throwable;
use Carbon\Carbon;

class YclientsService
{
    /** Динасический ID филиала */
    private $company_id;

    /** Фиксированный токен приложения */
    private $app_token;

    /** Фиксированный токен разработчика */
    private $partner_token;

    /** Максимальное кол-во записей для запроса */
    private $count = 1000;

    /** Дата начала выборки */
    private $start_date;

    /** Дата окончания выборки */
    private $end_date;

    public function __construct($params = [])
    {
        $this->app_token = env('YCLIENTS_APP_TOKEN', '');
        $this->partner_token = env('YCLIENTS_PARTNER_TOKEN', '');

        $this->updateParams($params);
    }

    public function setCompanyId($id) {
        $this->company_id = $id;
    }

    public function updateParams($params) {
        if (array_key_exists('company_id', $params)) {
            $this->company_id = $params["company_id"];
        }

        if (array_key_exists('start_date', $params)) {
            $this->start_date = $params["start_date"];
        }

        if (array_key_exists('end_date', $params)) {
            $this->end_date = $params["end_date"];
        }
    }

    private function httpWithHeaders(): \Illuminate\Http\Client\PendingRequest
	{
		$isUseRetry = (bool) env('HTTP_USE_RETRY', false);
		$isHttpDebug = (bool) env('HTTP_DEBUG', false);

		$http = Http::withHeaders([
			"Accept"          => "application/vnd.yclients.v2+json",
			"Content-Type"    => "application/json",
			"Authorization"   => sprintf("Bearer %s, User %s", $this->partner_token, $this->app_token),
			"Idempotency-Key" => Str::uuid()->toString(),
			"Connection"      => "close"
		])->withOptions([
			"verify" => false,
			"curl" => [
				CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4,
			],
		]);

		if ($isUseRetry) {
			$http->retry(2, 5000);
		}

		if ($isHttpDebug) {
			$http->withMiddleware(function ($handler) {
				return function ($request, array $options) use ($handler) {
					Log::channel('http')->info('Request', [
						'method'  => $request->getMethod(),
						'url'     => (string) $request->getUri(),
						'headers' => $request->getHeaders(),
						'body'    => (string) $request->getBody(),
					]);
					return $handler($request, $options);
				};
			});
		}

		return $http;
	}


    private function httpGet($url) {
        $response = $this->httpWithHeaders()->get($url);

        $isHttpDebug = (bool) env('HTTP_DEBUG', false);
        if ($isHttpDebug) {
            Log::channel('http')->info('Response', [
                'method'  => 'GET',
                'url'     => $url,
                'status'  => $response->status(),
                'body'    => $response->body(),
                'headers' => $response->headers(),
            ]);
        }

        return $response;
    }

    /**
     * Фильтр уволенных сотрудников, удаленных сотрудников, лист ожидания. 2191383
     */
    private function isRemoveStaff($data): bool
    {
        return $data["is_fired"] || $data["is_deleted"] ; // || strtoupper($data["name"]) == "ЛИСТ ОЖИДАНИЯ"
    }

    /**
     * Получение списка сотрудников
     * @return false | array<string[]>
     */

    public function getStaff($params = []) {
        try {
            $url = sprintf("https://api.yclients.com/api/v1/company/%s/staff", $this->company_id);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $withRemoveStaff = array_key_exists('withRemoveStaff', $params);

            $staff = [];

            foreach ($response["data"] as $one) {
                if(!$withRemoveStaff && $this->isRemoveStaff($one)) {
                    continue;
                }
                $id = $one["id"];

                $staff[$id]["id"] = $one["id"];
                $staff[$id]["name"] = $one["name"];
                $staff[$id]["specialization"] = $one["specialization"];
                $staff[$id]["avatar_big"] = $one["avatar_big"];

                if (array_key_exists('is_fired', $one)) {
                    $staff[$id]["is_fired"] = $one["is_fired"];
                }

                if (isset($one["user"]["phone"])) {
                    $staff[$id]["phone"] = $one["user"]["phone"];
                } else {
                    $staff[$id]["phone"] = "";
                }
            }

            return $staff;

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }

    /**
     * Получение данных по сотруднику
     * @return false | array<string[]>
     */

    public function getStaffData($staff) {
        try {
            $url = sprintf("https://api.yclients.com/api/v1/company/%s/staff/%s", $this->company_id, $staff);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $data = $response["data"];

            return [
                "id"             => $data["id"],
                "name"           => $data["name"],
                "specialization" => $data["specialization"],
            ];

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }

    /**
     * Получить основные показатели компании по сотруднику ?
     * @return false | array<int, string, string>
     */
    public function getCompanyStatsByStaff($staff_id) {
        try {
            $query = http_build_query([
                "date_from" => $this->start_date,
                "date_to"   => $this->end_date,
                "staff_id"  => $staff_id
            ]);

            $url = sprintf("https://api.yclients.com/api/v1/company/%s/analytics/overall/?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            return [
                "average_sum" => (float) $response["data"]["income_average_stats"]["current_sum"],
                "fullness" => $response["data"]["fullness_stats"]["current_percent"],
                "new_client" => $response["data"]["client_stats"]["new_count"],
                "return_client" => $response["data"]["client_stats"]["return_count"],
                "income_total" => $response["data"]["income_total_stats"]["current_sum"],
                "income_goods" => $response["data"]["income_goods_stats"]["current_sum"],
            ];

        } catch (Throwable $e) {
            report($e->getMessage());

            return false;
        }
    }


    /**
     * Получить основные показатели компании за период
     * @return false | array<int, string, string>
     */
    public function getCompanyStats() {
        try {
            $query = http_build_query([
                "date_from" => $this->start_date,
                "date_to"   => $this->end_date,
            ]);

            $url = sprintf("https://api.yclients.com/api/v1/company/%s/analytics/overall/?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            return [
                "average_sum" => $response["data"]["income_average_stats"]["current_sum"],
                "fullness" => $response["data"]["fullness_stats"]["current_percent"],
                "new_client" => $response["data"]["client_stats"]["new_count"],
                "income_total" => $response["data"]["income_total_stats"]["current_sum"],
                "income_goods" => $response["data"]["income_goods_stats"]["current_sum"],
            ];

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }

    /**
     * Получения отзывов на сотрудников по филиалу
     * @return false | array<int, int>
     */
    function getCommentsByCompany() {
        try {
            $MAX_RATING = 5;

            $query = http_build_query([
                "start_date" => $this->start_date,
                "end_date"   => $this->end_date,
                "count"      => 2000,
                "page"       => 1,
                // "staff_id"  => $staff_id - можно фильтровать по сотруднику
            ]);
            $url = sprintf("https://api.yclients.com/api/v1/comments/%s?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $comments = [];

            foreach ($response["data"] as $one) {
                $key = $one["master_id"];

                if (!array_key_exists($key, $comments)) {
                    $comments[$key]["total"] = 0;
                    $comments[$key]["best"] = 0;
                }

                $comments[$key]["total"] += 1;

                if ($one["rating"] === $MAX_RATING) {
                    $comments[$key]["best"] += 1;
                }
            }

            return $comments;

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }

    /**
     * Получение проданных абонементов и сертификатов по компании
     * @return false | array<int, int>
     */
    function getTransactionsCompanyByStaffId($staff_id) {
        try {
            $FILTER_LOYALTY_IDS = [
                6, // Продажа абонементов
                12 // Продажа сертификатов
            ];

            $FILTER_SALES_IDS = [
                7, // Продажа товаров
            ];

            $query = http_build_query([
                "start_date" => $this->start_date,
                "end_date"   => $this->end_date,
                "master_id"  => $staff_id,
                "count"      => 10000,
                "page"       => 1,
            ]);
            $url = sprintf("https://api.yclients.com/api/v1/transactions/%s?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $loyalty = 0;
            $sales = 0;

            foreach ($response["data"] as $one) {
                if (in_array($one["expense"]["id"], $FILTER_LOYALTY_IDS)) {
                    $loyalty += $one["amount"];
                }

                if (in_array($one["expense"]["id"], $FILTER_SALES_IDS)) {
                    $sales += $one["amount"];
                }
            }

            return [
                "loyalty" => $loyalty,
                "sales" => $sales
            ];
        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }


    /**
     * Получить список записей по сотруднику
     * @return false | int
     */
    function getRecordsByStaffId($staff_id) {
        try {
            $query = http_build_query([
                "start_date" => $this->start_date,
                "end_date"   => $this->end_date,
                "count"      => $this->count,
                "staff_id"   => $staff_id,
            ]);

            // Услуги

            $FILTER_IDS = [

				// SODA

                // НОГТЕВОЙ СЕРВИС

                16339331, // МУЖСКОЙ ПИЛОЧНЫЙ МАНИКЮР
                16339330, // МУЖСКОЙ ПИЛОЧНЫЙ МАНИКЮР // ТОП-МАСТЕР
                16339329, // МУЖСКОЙ ПИЛОЧНЫЙ МАНИКЮР // БРЕНД-МАСТЕР
                13825202, // ПИЛОЧНЫЙ МАНИКЮР
                13825203, // ПИЛОЧНЫЙ МАНИКЮР // ТОП-МАСТЕР
                13825205, // ПИЛОЧНЫЙ МАНИКЮР // БРЕНД-МАСТЕР
                11702783, // ЖЕНСКИЙ БРАЗИЛЬСКИЙ МАНИКЮР
                11702809, // ЖЕНСКИЙ БРАЗИЛЬСКИЙ МАНИКЮР // ТОП-МАСТЕР
                13509507, // ЖЕНСКИЙ БРАЗИЛЬСКИЙ МАНИКЮР // БРЕНД-МАСТЕР
                11702882, // МУЖСКОЙ БРАЗИЛЬСКИЙ МАНИКЮР (убираем у Фонвизинской)
                12535794, // МУЖСКОЙ БРАЗИЛЬСКИЙ МАНИКЮР // ТОП-МАСТЕР (убираем у Фонвизинской)
                13509749, // МУЖСКОЙ БРАЗИЛЬСКИЙ МАНИКЮР // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11702880, // МУЖСКОЙ БРАЗИЛЬСКИЙ ПЕДИКЮР (убираем у Фонвизинской)
                11702897, // МУЖСКОЙ БРАЗИЛЬСКИЙ ПЕДИКЮР // ТОП-МАСТЕР (убираем у Фонвизинской)
                13509747, // МУЖСКОЙ БРАЗИЛЬСКИЙ ПЕДИКЮР // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11702873, // МУЖСКОЙ SMART-ПЕДИКЮР (убираем у Фонвизинской)
                11702887, // МУЖСКОЙ SMART-ПЕДИКЮР // ТОП-МАСТЕР (убираем у Фонвизинской)
                13509746, // МУЖСКОЙ SMART-ПЕДИКЮР // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11702841, // ЖЕНСКИЙ БРАЗИЛЬСКИЙ ПЕДИКЮР (убираем у Фонвизинской)
                11702906, // ЖЕНСКИЙ БРАЗИЛЬСКИЙ ПЕДИКЮР // ТОП-МАСТЕР (убираем у Фонвизинской)
                13509611, // ЖЕНСКИЙ БРАЗИЛЬСКИЙ ПЕДИКЮР // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11702840, // ЖЕНСКИЙ SMART-ПЕДИКЮР (убираем у Фонвизинской)
                11702904, // ЖЕНСКИЙ SMART-ПЕДИКЮР // ТОП-МАСТЕР (убираем у Фонвизинской)
                13509607, // ЖЕНСКИЙ SMART-ПЕДИКЮР // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                16697363, // ПРЕПАРАТНЫЙ МАНИКЮР STRADERM (убираем у Фонвизинской)
                14066688, // ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM (убираем у Фонвизинской)
                15595193, // МУЖСКОЙ ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM (убираем у Фонвизинской)
                16697364, // ПРЕПАРАТНЫЙ МАНИКЮР STRADERM // ТОП-МАСТЕР (убираем у Фонвизинской)
                14066689, // ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM // ТОП-МАСТЕР (убираем у Фонвизинской)
                15595196, // МУЖСКОЙ ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM // ТОП-МАСТЕР (убираем у Фонвизинской)
                16697365, // ПРЕПАРАТНЫЙ МАНИКЮР STRADERM // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                14066691, // ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                15595197, // МУЖСКОЙ ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11702784, // ЛЕЧЕБНОЕ ПОКРЫТИЕ BANDI (РУКИ)
                17196566, // ЛЕЧЕБНОЕ ПОКРЫТИЕ BANDI (НОГИ)
                13812214, // ЛЕЧЕБНОЕ ВОССТАНОВЛЕНИЕ НОГТЕЙ IBX
                11702808, // ЛЕЧЕБНОЕ ПОКРЫТИЕ BANDI (РУКИ) // ТОП-МАСТЕР
                17196605, // ЛЕЧЕБНОЕ ПОКРЫТИЕ BANDI (НОГИ) // ТОП-МАСТЕР
                13812216, // ЛЕЧЕБНОЕ ВОССТАНОВЛЕНИЕ НОГТЕЙ IBX // ТОП-МАСТЕР
                13509653, // ЛЕЧЕБНОЕ ПОКРЫТИЕ BANDI (РУКИ) // БРЕНД-МАСТЕР
                17196629, // ЛЕЧЕБНОЕ ПОКРЫТИЕ BANDI (НОГИ) // БРЕНД-МАСТЕР
                13509652, // ЛЕЧЕБНОЕ ВОССТАНОВЛЕНИЕ НОГТЕЙ IBX // БРЕНД-МАСТЕР
                11702795, // УКРЕПЛЯЮЩЕЕ ПОКРЫТИЕ (РУКИ)
                14390484, // УКРЕПЛЯЮЩЕЕ ПОКРЫТИЕ (РУКИ) // ТОП-МАСТЕР
                13509655, // УКРЕПЛЯЮЩЕЕ ПОКРЫТИЕ (РУКИ) // БРЕНД-МАСТЕР
                17196578, // УКРЕПЛЯЮЩЕЕ ПОКРЫТИЕ (НОГИ)
                17196612, // УКРЕПЛЯЮЩЕЕ ПОКРЫТИЕ (НОГИ) // ТОП-МАСТЕР
                17196633, // УКРЕПЛЯЮЩЕЕ ПОКРЫТИЕ (НОГИ) // БРЕНД-МАСТЕР
                14764030, // КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ
                14764035, // КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ // ТОП-МАСТЕР
                14764036, // КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ // БРЕНД-МАСТЕР
                11702767, // УКРЕПЛЕНИЕ ГЕЛЕМ
                11702758, // SPA BANDI НА ШВЕЙЦАРСКИХ ТРАВАХ (РУКИ)
                11702754, // SPA BANDI НА ШВЕЙЦАРСКИХ ТРАВАХ + УВЛАЖНЯЮЩАЯ МАСКА (РУКИ)
                11702872, // SPA BANDI НА ШВЕЙЦАРСКИХ ТРАВАХ (НОГИ)
                11702884, // SPA BANDI НА ШВЕЙЦАРСКИХ ТРАВАХ + УВЛАЖНЯЮЩАЯ МАСКА (НОГИ)
                11702761, // ЭКСПРЕСС УКРЕПЛЕНИЕ НОГТЕЙ
                11702753, // ЭКСПРЕСС-SPA ДЛЯ РУК
                11702755, // ЭКСПРЕСС-SPA ДЛЯ НОГ
                13724685, // СКРАБ + ХОЛОДНЫЙ ПАРАФИН
                11702777, // ХОЛОДНАЯ ПАРАФИНОТЕРАПИЯ
                11702765, // СКРАБ
                11702776, // ПОЛИРОВКА НОГТЕЙ
                11702778, // МАССАЖ РУК
                13821569, // МАССАЖ НОГ
                // 11702773, // РЕМОНТ НОГТЕВОЙ ПЛАСТИНЫ (убираем у Шелепихи)

                11702888, // ПРОСТОЙ ДИЗАЙН 1 ПАЛЕЦ
                11702891, // СЛОЖНЫЙ ДИЗАЙН 1 ПАЛЕЦ
                11702895, // ХУДОЖЕСТВЕННАЯ РОСПИСЬ 1 ПАЛЕЦ
                11725506, // ФРЕНЧ

                // БРОВИСТЫ

                11702825, // СЧАСТЬЕ ДЛЯ БРОВЕЙ
                13510355, // СЧАСТЬЕ ДЛЯ БРОВЕЙ (BOTOX) // ТОП-МАСТЕР
                11702829, // ЛАМИНИРОВАНИЕ БРОВЕЙ (убираем у Фонвизинской)
                13510356, // ЛАМИНИРОВАНИЕ БРОВЕЙ // ТОП-МАСТЕР (убираем у Фонвизинской)
                17528728, // ЛАМИНИРОВАНИЕ БРОВЕЙ // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11742680, // ЛАМИНИРОВАНИЕ РЕСНИЦ (убираем у Фонвизинской)
                13510336, // ЛАМИНИРОВАНИЕ РЕСНИЦ // ТОП-МАСТЕР (убираем у Фонвизинской)
                17528753, // ЛАМИНИРОВАНИЕ РЕСНИЦ // БРЕНД-МАСТЕР (убираем у Фонвизинской)
                11702923, // ОКРАШИВАНИЕ РЕСНИЦ
                13510338, // ОКРАШИВАНИЕ РЕСНИЦ // ТОП-МАСТЕР
                17528752, // ОКРАШИВАНИЕ РЕСНИЦ // БРЕНД-МАСТЕР

                13821651, // ВОСК ВЕРХНЯЯ ГУБА
                13821658, // ВОСК ВЕРХНЯЯ ГУБА // ТОП-МАСТЕР
                17528839, // ВОСК ВЕРХНЯЯ ГУБА // БРЕНД-МАСТЕР
                13510499, // ВОСК БАКЕНБАРДЫ
                13510459, // ВОСК БАКЕНБАРДЫ // ТОП-МАСТЕР
                17528840, // ВОСК БАКЕНБАРДЫ // БРЕНД-МАСТЕР
                13510493, // ВОСК ЗОНА ПОДБОРОДКА
                13510458, // ВОСК ЗОНА ПОДБОРОДКА // ТОП-МАСТЕР
                17528842, // ВОСК ЗОНА ПОДБОРОДКА // БРЕНД-МАСТЕР
                13510491, // ВОСК ЗОНА ЛБА
                13510456, // ВОСК ЗОНА ЛБА // ТОП-МАСТЕР
                17528843, // ВОСК ЗОНА ЛБА // БРЕНД-МАСТЕР
                13510489, // ПРОРЕЖИВАНИЕ БРОВЕЙ
                13510455, // ПРОРЕЖИВАНИЕ БРОВЕЙ // ТОП-МАСТЕР
                17528844, // ПРОРЕЖИВАНИЕ БРОВЕЙ // БРЕНД-МАСТЕР
                13510487, // ОСВЕТЛЕНИЕ БРОВЕЙ
                13510454, // ОСВЕТЛЕНИЕ БРОВЕЙ // ТОП-МАСТЕР
                17528847, // ОСВЕТЛЕНИЕ БРОВЕЙ // БРЕНД-МАСТЕР

                // СТИЛИСТЫ

                // ДОПОЛНИТЕЛЬНЫЕ УСЛУГИ ВОЛОСЫ

                17543514, // АРОМА-SPA ДЛЯ ВОЛОС KOYCA
                11703469, // ВОССТАНАВЛИВАЮЩИЙ УХОД (ДЛИННЫЕ)
                11703466, // ВОССТАНАВЛИВАЮЩИЙ УХОД (КОРОТКИЕ)
                11703468, // ВОССТАНАВЛИВАЮЩИЙ УХОД (СРЕДНИЕ)
                11703673, // МАСКА
                11703488, // ПИЛИНГ ГОЛОВЫ
                11703489, // ПИЛИНГ ГОЛОВЫ DAVINES
                13866336, // ПЕРСОНАЛИЗИРОВАННЫЙ УХОД TAILORING ОТ DAVINES (ДЛИННЫЕ)
                13866334, // ПЕРСОНАЛИЗИРОВАННЫЙ УХОД TAILORING ОТ DAVINES (КОРОТКИЕ)
                13866335, // ПЕРСОНАЛИЗИРОВАННЫЙ УХОД TAILORING ОТ DAVINES (СРЕДНИЕ)
                11872912, // УХОД ЗА ВОЛОСАМИ HADAT (ДЛИННЫЕ)
                11872906, // УХОД ЗА ВОЛОСАМИ HADAT (КОРОТКИЕ)
                11872909, // УХОД ЗА ВОЛОСАМИ HADAT (СРЕДНИЕ)
                11703462, // УХОД DAVINES. КЕРАТИНОВОЕ ЧУДО (ДЛИННЫЕ)
                11703458, // УХОД DAVINES. КЕРАТИНОВОЕ ЧУДО (КОРОТКИЕ)
                11703459, // УХОД DAVINES. КЕРАТИНОВОЕ ЧУДО (СРЕДНИЕ)
                14267113, // УХОДОВЫЙ КОМПЛЕКС HEART OF GLASS DAVINES ДЛЯ ОБЕСЦВЕЧЕННЫХ ВОЛОС (ДЛИННЫЕ)
                14267110, // УХОДОВЫЙ КОМПЛЕКС HEART OF GLASS DAVINES ДЛЯ ОБЕСЦВЕЧЕННЫХ ВОЛОС (КОРОТКИЕ)
                14267111, // УХОДОВЫЙ КОМПЛЕКС HEART OF GLASS DAVINES ДЛЯ ОБЕСЦВЕЧЕННЫХ ВОЛОС (СРЕДНИЕ)
                14266787, // УХОДОВЫЙ КОМПЛЕКС HEART OF GLASS DAVINES ДЛЯ ОСВЕТЛЕНЫХ ВОЛОС (ДЛИННЫЕ)
                14266782, // УХОДОВЫЙ КОМПЛЕКС HEART OF GLASS DAVINES ДЛЯ ОСВЕТЛЕНЫХ ВОЛОС (КОРОТКИЕ)
                14266785, // УХОДОВЫЙ КОМПЛЕКС HEART OF GLASS DAVINES ДЛЯ ОСВЕТЛЕНЫХ ВОЛОС (СРЕДНИЕ)
                12846295, // УХОДЫ KEVIN MURPHY ДЛЯ ОКРАШЕННЫХ ВОЛОС В ДЕНЬ ОКРАШИВАНИЯ (ДЛИННЫЕ)
                12846293, // УХОДЫ KEVIN MURPHY ДЛЯ ОКРАШЕННЫХ ВОЛОС В ДЕНЬ ОКРАШИВАНИЯ (КОРОТКИЕ)
                12846294, // УХОДЫ KEVIN MURPHY ДЛЯ ОКРАШЕННЫХ ВОЛОС В ДЕНЬ ОКРАШИВАНИЯ (СРЕДНИЕ)
                12846282, // УХОДЫ KEVIN MURPHY С АМПУЛАМИ (ДЛИННЫЕ)
                12846277, // УХОДЫ KEVIN MURPHY С АМПУЛАМИ (КОРОТКИЕ)
                12846281, // УХОДЫ KEVIN MURPHY С АМПУЛАМИ (СРЕДНИЕ)
                12846291, // УХОДЫ KEVIN MURPHY ЭКСПРЕСС (ДЛИННЫЕ)
                12846288, // УХОДЫ KEVIN MURPHY ЭКСПРЕСС (КОРОТКИЕ)
                12846289, // УХОДЫ KEVIN MURPHY ЭКСПРЕСС (СРЕДНИЕ)
                11703487, // ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ)
                11703481, // ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ)
                11703486, // ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ)
                12278070, // BOND БУСТЕР 1 ФАЗА
                12278057, // BOND ИНТЕНСИВНЫЙ УХОД 5 СТУПЕНЕЙ (ДЛИННЫЕ)
                12278049, // BOND ИНТЕНСИВНЫЙ УХОД 5 СТУПЕНЕЙ (КОРОТКИЕ)
                12278053, // BOND ИНТЕНСИВНЫЙ УХОД 5 СТУПЕНЕЙ (СРЕДНИЕ)
                12278068, // BOND УХОД 2 ФАЗЫ (ДЛИННЫЕ)
                12278061, // BOND УХОД 2 ФАЗЫ (КОРОТКИЕ)
                12278064, // BOND УХОД 2 ФАЗЫ (СРЕДНИЕ)
                12278044, // OI LIQUID LUSTER DAVINES (ДЛИННЫЕ)
                12278035, // OI LIQUID LUSTER DAVINES (КОРОТКИЕ)
                12278040, // OI LIQUID LUSTER DAVINES (СРЕДНИЕ)
                15936734, // REVLON RESTART PRO CARE SYSTEM (ДЛИННЫЕ)
                15936733, // REVLON RESTART PRO CARE SYSTEM (СРЕДНИЕ)

                14074650, // ПЕПТИДНОЕ ВОССТАНОВЛЕНИЕ (ДЛИННЫЕ) (убираем у Фонвизинской)
                14074646, // ПЕПТИДНОЕ ВОССТАНОВЛЕНИЕ (КОРОТКИЕ) (убираем у Фонвизинской)
                14074649, // ПЕПТИДНОЕ ВОССТАНОВЛЕНИЕ (СРЕДНИЕ) (убираем у Фонвизинской)
                13657840, // УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (ДЛИННЫЕ) (убираем у Фонвизинской)
                13657830, // УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (КОРОТКИЕ) (убираем у Фонвизинской)
                13657841, // УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (ОЧЕНЬ ДЛИННЫЕ) (убираем у Фонвизинской)
                13657838, // УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (СРЕДНИЕ) (убираем у Фонвизинской)
                13513304, // УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ДЛИННЫЕ) (убираем у Фонвизинской)
                13513301, // УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (КОРОТКИЕ) (убираем у Фонвизинской)
                13513305, // УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ОЧЕНЬ ДЛИННЫЕ) (убираем у Фонвизинской)
                13513303, // УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (СРЕДНИЕ) (убираем у Фонвизинской)
                13513316, // УХОД ОТ LEBEL. БЛЕСК И СИЛА (ДЛИННЫЕ) (убираем у Фонвизинской)
                13513312, // УХОД ОТ LEBEL. БЛЕСК И СИЛА (КОРОТКИЕ) (убираем у Фонвизинской)
                13513317, // УХОД ОТ LEBEL. БЛЕСК И СИЛА (ОЧЕНЬ ДЛИННЫЕ) (убираем у Фонвизинской)
                13513314, // УХОД ОТ LEBEL. БЛЕСК И СИЛА (СРЕДНИЕ) (убираем у Фонвизинской)
                13513328, // УХОД ОТ LEBEL. ЭССЕНЦИИ (ДЛИННЫЕ) (убираем у Фонвизинской)
                13513325, // УХОД ОТ LEBEL. ЭССЕНЦИИ (КОРОТКИЕ) (убираем у Фонвизинской)
                13513329, // УХОД ОТ LEBEL. ЭССЕНЦИИ (ОЧЕНЬ ДЛИННЫЕ) (убираем у Фонвизинской)
                13513327, // УХОД ОТ LEBEL. ЭССЕНЦИИ (СРЕДНИЕ) (убираем у Фонвизинской)

                // УКЛАДКИ

                17542815, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (ДЛИННЫЕ)
                17542812, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (КОРОТКИЕ)
                17542814, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (СРЕДНИЕ)
                17540844, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (ДЛИННЫЕ)
                17540845, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (ОЧЕНЬ ДЛИННЫЕ)
                17540843, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (СРЕДНИЕ)
                17542397, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (ДЛИННЫЕ)
                17542398, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (ОЧЕНЬ ДЛИННЫЕ)
                17542396, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (СРЕДНИЕ)
                17541367, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (ДЛИННЫЕ)
                17541369, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (ОЧЕНЬ ДЛИННЫЕ)
                17541366, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (СРЕДНИЕ)
                17540831, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (ДЛИННЫЕ)
                17540832, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (ОЧЕНЬ ДЛИННЫЕ)
                17540830, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (СРЕДНИЕ)
                17540813, // УКЛАДКА СЕРФ-ЛОКОНЫ (ДЛИННЫЕ)
                17540815, // УКЛАДКА СЕРФ-ЛОКОНЫ (ОЧЕНЬ ДЛИННЫЕ)
                17540811, // УКЛАДКА СЕРФ-ЛОКОНЫ (СРЕДНИЕ)

                17543018, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (КОРОТКИЕ) // ТОП-СТИЛИСТ
                17543020, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (СРЕДНИЕ) // ТОП-СТИЛИСТ
                17543021, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17548127, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17548128, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (ОЧЕНЬ ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17548125, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (СРЕДНИЕ) // ТОП-СТИЛИСТ
                17542989, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542991, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (ОЧЕНЬ ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542988, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (СРЕДНИЕ) // ТОП-СТИЛИСТ
                17542973, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542974, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (ОЧЕНЬ ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542972, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (СРЕДНИЕ) // ТОП-СТИЛИСТ
                17542959, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542961, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (ОЧЕНЬ ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542958, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (СРЕДНИЕ) // ТОП-СТИЛИСТ
                17542837, // УКЛАДКА СЕРФ-ЛОКОНЫ (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542838, // УКЛАДКА СЕРФ-ЛОКОНЫ (ОЧЕНЬ ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17542835, // УКЛАДКА СЕРФ-ЛОКОНЫ (СРЕДНИЕ) // ТОП-СТИЛИСТ

                17543417, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543411, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (КОРОТКИЕ) // АРТ-СТИЛИСТ
                17543412, // СТРИЖКА + ЭКСПРЕСС-УКЛАДКА (СРЕДНИЕ) // АРТ-СТИЛИСТ
                17543097, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543098, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (ОЧЕНЬ ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543095, // УКЛАДКА "ГОЛЛИВУДСКАЯ ВОЛНА" (СРЕДНИЕ) // АРТ-СТИЛИСТ
                17543369, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543378, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (ОЧЕНЬ ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543356, // УКЛАДКА ВЕЧЕРНЯЯ/СВАДЕБНАЯ (СРЕДНИЕ) // АРТ-СТИЛИСТ
                17543205, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543214, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (ОЧЕНЬ ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543191, // УКЛАДКА КОКТЕЙЛЬНАЯ ХВОСТ/ПУЧОК (СРЕДНИЕ) // АРТ-СТИЛИСТ
                17543065, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543067, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (ОЧЕНЬ ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543064, // УКЛАДКА ОБЪЁМНЫЕ ЛОКОНЫ НА БРАШ (СРЕДНИЕ) // АРТ-СТИЛИСТ
                17543049, // УКЛАДКА СЕРФ-ЛОКОНЫ (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543050, // УКЛАДКА СЕРФ-ЛОКОНЫ (ОЧЕНЬ ДЛИННЫЕ) // АРТ-СТИЛИСТ
                17543048, // УКЛАДКА СЕРФ-ЛОКОНЫ (СРЕДНИЕ) // АРТ-СТИЛИСТ

            ];

            // Услуги в комплексе

            $SERVICES_COST = [

				// SODA

                // НОГТЕВОЙ СЕРВИС

                13821260 => 1200, // СНЯТИЕ ГЕЛЬ-ЛАКА + МАНИКЮР + УКРЕПЛЕНИЕ ГЕЛЕМ + ПОКРЫТИЕ ГЕЛЬ-ЛАКОМ
                13821309 => 1200, // СНЯТИЕ ГЕЛЬ-ЛАКА + МАНИКЮР + УКРЕПЛЕНИЕ ГЕЛЕМ + ПОКРЫТИЕ ГЕЛЬ-ЛАКОМ // ТОП-МАСТЕР
                13509468 => 1200, // СНЯТИЕ ГЕЛЬ-ЛАКА + МАНИКЮР + УКРЕПЛЕНИЕ ГЕЛЕМ + ПОКРЫТИЕ ГЕЛЬ-ЛАКОМ // БРЕНД-МАСТЕР
                13821259 => 1900, // СНЯТИЕ ГЕЛЬ-ЛАКА + МАНИКЮР + КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ
                13821308 => 2100, // СНЯТИЕ ГЕЛЬ-ЛАКА + МАНИКЮР + КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ // ТОП-МАСТЕР
                13509467 => 2500, // СНЯТИЕ ГЕЛЬ-ЛАКА + МАНИКЮР + КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ // БРЕНД-МАСТЕР
                13821256 => 2400, // СНЯТИЕ ГЕЛЬ-ЛАКА + SMART-ПЕДИКЮР + ПОКРЫТИЕ ГЕЛЬ-ЛАК
                13821306 => 2600, // СНЯТИЕ ГЕЛЬ-ЛАКА + SMART-ПЕДИКЮР + ПОКРЫТИЕ ГЕЛЬ-ЛАК // ТОП-МАСТЕР
                13509463 => 2900, // СНЯТИЕ ГЕЛЬ-ЛАКА + SMART-ПЕДИКЮР + ПОКРЫТИЕ LUXIO, BANDI // БРЕНД-МАСТЕР
                17083661 => 2400, // СНЯТИЕ ГЕЛЬ-ЛАКА + ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM + ПОКРЫТИЕ ГЕЛЬ-ЛАК
                17083663 => 2600, // СНЯТИЕ ГЕЛЬ-ЛАКА + ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM + ПОКРЫТИЕ ГЕЛЬ-ЛАК // ТОП-МАСТЕР
                17083664 => 2900, // СНЯТИЕ ГЕЛЬ-ЛАКА + ПРЕПАРАТНЫЙ ПЕДИКЮР STRADERM + ПОКРЫТИЕ LUXIO, BANDI // БРЕНД-МАСТЕР
                16641067 => 1900, // СНЯТИЕ ГЕЛЯ + МАНИКЮР + КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ
                16641068 => 1200, // СНЯТИЕ ГЕЛЯ + МАНИКЮР + УКРЕПЛЕНИЕ ГЕЛЕМ + ПОКРЫТИЕ ГЕЛЬ-ЛАКОМ
                16641088 => 2100, // СНЯТИЕ ГЕЛЯ + МАНИКЮР + КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ // ТОП-МАСТЕР
                16641090 => 1200, // СНЯТИЕ ГЕЛЯ + МАНИКЮР + УКРЕПЛЕНИЕ ГЕЛЕМ + ПОКРЫТИЕ ГЕЛЬ-ЛАКОМ // ТОП-МАСТЕР
                16641204 => 2500, // СНЯТИЕ ГЕЛЯ + МАНИКЮР + КАМУФЛИРУЮЩЕЕ УКРЕПЛЕНИЕ ГЕЛЕМ // БРЕНД-МАСТЕР
                16641207 => 1200, // СНЯТИЕ ГЕЛЯ + МАНИКЮР + УКРЕПЛЕНИЕ ГЕЛЕМ + ПОКРЫТИЕ ГЕЛЬ-ЛАКОМ // БРЕНД-МАСТЕР

                // БРОВИСТЫ

                17528148 => 2100, // ЛАМИНИРОВАНИЕ + ОКРАШИВАНИЕ БРОВЕЙ + ОФОРМЛЕНИЕ
                17528150 => 2800, // ЛАМИНИРОВАНИЕ + ОКРАШИВАНИЕ БРОВЕЙ + ОФОРМЛЕНИЕ + BOTOX
                17528659 => 2300, // ЛАМИНИРОВАНИЕ + ОКРАШИВАНИЕ БРОВЕЙ + ОФОРМЛЕНИЕ // ТОП-МАСТЕР
                17528661 => 3000, // ЛАМИНИРОВАНИЕ + ОКРАШИВАНИЕ БРОВЕЙ + ОФОРМЛЕНИЕ + BOTOX // ТОП-МАСТЕР
                17528815 => 2500, // ЛАМИНИРОВАНИЕ + ОКРАШИВАНИЕ БРОВЕЙ + ОФОРМЛЕНИЕ // БРЕНД-МАСТЕР
                17528816 => 3200, // ЛАМИНИРОВАНИЕ + ОКРАШИВАНИЕ БРОВЕЙ + ОФОРМЛЕНИЕ + BOTOX // БРЕНД-МАСТЕР
                17528423 => 3100, // ЛАМИНИРОВАНИЕ РЕСНИЦ + ОКРАШИВАНИЕ РЕСНИЦ
                17528404 => 3800, // ЛАМИНИРОВАНИЕ РЕСНИЦ + ОКРАШИВАНИЕ РЕСНИЦ + BOTOX
                17528559 => 3500, // ЛАМИНИРОВАНИЕ РЕСНИЦ + ОКРАШИВАНИЕ РЕСНИЦ // ТОП-МАСТЕР
                17528556 => 4200, // ЛАМИНИРОВАНИЕ РЕСНИЦ + ОКРАШИВАНИЕ РЕСНИЦ + BOTOX // ТОП-МАСТЕР
                17528913 => 3900, // ЛАМИНИРОВАНИЕ РЕСНИЦ + ОКРАШИВАНИЕ РЕСНИЦ // БРЕНД-МАСТЕР
                17528912 => 4600, // ЛАМИНИРОВАНИЕ РЕСНИЦ + ОКРАШИВАНИЕ РЕСНИЦ + BOTOX // БРЕНД-МАСТЕР

                // СТИЛИСИТЫ

                11703313 => 3300, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ)
                11703314 => 4500, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ)
                11703315 => 6600, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ)
                15596964 => 3300, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ)
                15596968 => 4500, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ)
                15596963 => 6600, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ)
                11703312 => 2500, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ)
                11703311 => 3300, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ)
                11703309 => 3700, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ)
                17543552 => 2200, // МЫТЬЕ + ПИЛИНГ + СУШКА ВОЛОС (DAVINES)
                17543551 => 2000, // МЫТЬЕ + ПИЛИНГ + СУШКА ВОЛОС
                15596949 => 1700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (КОРОТКИЕ)
                15596950 => 2700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (СРЕДНИЕ)
                15596948 => 3700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (ДЛИННЫЕ)
                15596945 => 3300, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (КОРОТКИЕ)
                15596947 => 5800, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (СРЕДНИЕ)
                15596944 => 8000, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ДЛИННЫЕ)
                15596946 => 10300, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ОЧЕНЬ ДЛИННЫЕ)
                15596725 => 1500, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (КОРОТКИЕ)
                15596726 => 2500, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (СРЕДНИЕ)
                15596724 => 3700, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (ДЛИННЫЕ)
                15596677 => 2200, // СТРИЖКА + ПИЛИНГ DAVINES
                15596676 => 2000, // СТРИЖКА + ПИЛИНГ
                11703295 => 3300, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ) // ТОП-СТИЛИСТ
                11703286 => 4500, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ) // ТОП-СТИЛИСТ
                11703293 => 6600, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                15597506 => 3300, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ) // ТОП-СТИЛИСТ
                15597507 => 4500, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ) // ТОП-СТИЛИСТ
                15597504 => 6600, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                11703235 => 2500, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ) // ТОП-СТИЛИСТ
                11703224 => 3300, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ) // ТОП-СТИЛИСТ
                11703247 => 3700, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                17543566 => 2200, // МЫТЬЕ + ПИЛИНГ + СУШКА ВОЛОС (DAVINES) // ТОП-СТИЛИСТ
                17543565 => 2000, // МЫТЬЕ + ПИЛИНГ + СУШКА ВОЛОС // ТОП-СТИЛИСТ
                15597490 => 1700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (КОРОТКИЕ) // ТОП-СТИЛИСТ
                15597491 => 2700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (СРЕДНИЕ) // ТОП-СТИЛИСТ
                15597489 => 3700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                15597484 => 3300, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (КОРОТКИЕ) // ТОП-СТИЛИСТ
                15597487 => 5800, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (СРЕДНИЕ) // ТОП-СТИЛИСТ
                15597483 => 8000, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                15597485 => 10300, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ОЧЕНЬ ДЛИННЫЕ) // ТОП-СТИЛИСТ
                15597467 => 1500, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (КОРОТКИЕ) // ТОП-СТИЛИСТ
                15597468 => 2500, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (СРЕДНИЕ) // ТОП-СТИЛИСТ
                15597464 => 3700, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (ДЛИННЫЕ) // ТОП-СТИЛИСТ
                15597463 => 2200, // СТРИЖКА + ПИЛИНГ DAVINES // ТОП-СТИЛИСТ
                15597462 => 2200, // СТРИЖКА + ПИЛИНГ // ТОП-СТИЛИСТ
                17543587 => 2200, // МЫТЬЕ + ПИЛИНГ + СУШКА ВОЛОС (DAVINES) // АРТ-СТИЛИСТ
                17543586 => 2000, // МЫТЬЕ + ПИЛИНГ + СУШКА ВОЛОС // АРТ-СТИЛИСТ
                15597823 => 3300, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ) // АРТ-СТИЛИСТ
                15597825 => 4500, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ) // АРТ-СТИЛИСТ
                15597822 => 6600, // УКЛАДКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                15597804 => 1700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (КОРОТКИЕ) // АРТ-СТИЛИСТ
                15597805 => 2700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (СРЕДНИЕ) // АРТ-СТИЛИСТ
                15597803 => 3700, // СТРИЖКА + УХОД ОТ LEBEL. БЛЕСК И СИЛА (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                15597798 => 3300, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (КОРОТКИЕ) // АРТ-СТИЛИСТ
                15597801 => 5800, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (СРЕДНИЕ) // АРТ-СТИЛИСТ
                15597797 => 8000, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                15597800 => 10300, // СТРИЖКА + УХОД ОТ LEBEL. АБСОЛЮТНОЕ СЧАСТЬЕ (ОЧЕНЬ ДЛИННЫЕ) // АРТ-СТИЛИСТ
                15597790 => 1500, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (КОРОТКИЕ) // АРТ-СТИЛИСТ
                15597792 => 2500, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (СРЕДНИЕ) // АРТ-СТИЛИСТ
                15597789 => 3700, // СТРИЖКА + УХОД ЖИЗНЕННАЯ СИЛА ОТ LEBEL (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                15597779 => 2200, // СТРИЖКА + ПИЛИНГ DAVINES // АРТ-СТИЛИСТ
                15597776 => 2000, // СТРИЖКА + ПИЛИНГ // АРТ-СТИЛИСТ
                14957282 => 3300, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ) // АРТ-СТИЛИСТ
                14957285 => 4500, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                14957284 => 6600, // СТРИЖКА + КЕРАТИНОВОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ) // АРТ-СТИЛИСТ
                14957260 => 2500, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (КОРОТКИЕ) // АРТ-СТИЛИСТ
                14957263 => 3300, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (ДЛИННЫЕ) // АРТ-СТИЛИСТ
                14957261 => 3700, // СТРИЖКА + ЭКСПРЕСС-УХОД ВЕГЕТАРИАНСКОЕ ЧУДО ОТ DAVINES (СРЕДНИЕ) // АРТ-СТИЛИСТ

            ];

            $SERVICES_COST_IDS = array_keys($SERVICES_COST);

            $url = sprintf("https://api.yclients.com/api/v1/records/%s?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $total = 0;

            foreach ($response["data"] as $one) {
                if (!is_array($one["services"]) || count($one["services"]) === 0)
                    continue;

                foreach ($one["services"] as $service) {
                    if (in_array($service["id"], $FILTER_IDS)) {
                        $total += $service["manual_cost"];
                    }

                    if (in_array($service["id"], $SERVICES_COST_IDS)) {
                        $total += $SERVICES_COST[$service["id"]];
                    }
                }
            }

            return $total;

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }


    /**
     * Получить список услуг в категории
     * @return false | array
     */
    function getServicesById($category_id) {
        $query = http_build_query([
            "category_id"   => $category_id,
        ]);

        $url = sprintf("https://api.yclients.com/api/v1/company/%s/services?%s", $this->company_id, $query);

        $response = $this->httpGet($url);

        $response = $response->json($key = null);

        if(!$response["success"]) {
            return false;
        }

        return $response["data"];
    }

    function getClientNameByTelnum($caller_number) {
        $query = http_build_query([
            "phone" => $caller_number,
        ]);

        $url = sprintf("https://api.yclients.com/api/v1/clients/%s?%s", $this->company_id, $query);

        $response = $this->httpGet($url);

        $response = $response->json($key = null);

        if(!$response["success"]) {
            return false;
        }

        return $response["data"];
    }

    function getRoyaltyByStaffId($staff_id) {
        try {
            $query = http_build_query([
                "start_date" => $this->start_date,
                "end_date"   => $this->end_date,
                "count"      => $this->count,
                "staff_id"   => $staff_id,
            ]);

            $url = sprintf("https://api.yclients.com/api/v1/records/%s?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $result = [];

            foreach ($response["data"] as $one) {
                if (!is_array($one["services"]) || count($one["services"]) === 0)
                    continue;

                $date = Carbon::parse($one["date"])->format('Y-m-d');

                if (!array_key_exists($date, $result)){
                    $result[$date] = 1;
                } else {
                    $result[$date] += 1;
                }
            }

            return $result;

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }

    public function getRecordsList() {
        try {
            $query = http_build_query([
                "start_date" => $this->start_date,
                "end_date"   => $this->end_date,
                "count"      => $this->count,
            ]);

            $url = sprintf("https://api.yclients.com/api/v1/records/%s?%s", $this->company_id, $query);

            $response = $this->httpGet($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            $result = [];

            foreach ($response["data"] as $one) {
                if (!is_array($one["services"]) || count($one["services"]) === 0 ||
                    !is_array($one["client"]) || !array_key_exists("id", $one["client"]))
                    continue;

                try {
                    $clientId = $one["client"]["id"];

                    if (!array_key_exists($clientId, $result)) {
                        $result[$clientId] = [
                            "id"       => $clientId,
                            "name"     => $one["client"]["name"],
                            "phone"    => $one["client"]["phone"],
                            "services" => array_map(function($service) { return $service["title"]; }, $one["services"]),
                        ];
                    }
                } catch (Throwable $e) {
                    report(json_encode($one));
                    continue;
                }
            }

            return $result;

        } catch (Throwable $e) {
            report($e);
            return false;
        }
    }

    public function getVisitedForPeriod($ids) {
        try {
            $values = array_unique($ids);

            $body = json_encode([
                "page"       => 1,
                "page_size"  => $this->count,
                "fields"     => [
                    "id",
                    "name",
                    "phone",
                    "visits_count",
                    "last_visit_date"
                ],
                "filters"    => [
                    [
                        "type"   => "id",
                        "state"  => [
                            "value" => $values
                        ],
                    ]
                ],
                "order_by"   => "last_visit_date",
                "order_by_direction" => "desc",
                "operation"  => "AND"
            ]);

            $url = sprintf("https://api.yclients.com/api/v1/company/%s/clients/search", $this->company_id);

            $response = $this->httpWithHeaders()
                ->withBody($body, 'application/json')
                ->post($url);

            $response = $response->json($key = null);

            if(!$response["success"]) {
                return false;
            }

            return $response["data"];

        } catch (Throwable $e) {
            report($e->getMessage());
            return false;
        }
    }
}
